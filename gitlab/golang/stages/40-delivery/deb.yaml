variables:
  GORELEASER_VERSION: "1.21.2"

delivery:qa:
  stage: 'delivery'
  image: 'golang:latest'
  script:
    - |
      set -eux
      apt-get update && apt-get install -y musl-tools

      # Install goreleaser
      curl -sL "https://github.com/goreleaser/goreleaser/releases/download/v${GORELEASER_VERSION}/goreleaser_${GORELEASER_VERSION}_amd64.deb" -o /tmp/goreleaser.deb
      dpkg -i /tmp/goreleaser.deb

      # Load repository secure files
      curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/feat/change-node-user/installer" | bash

      # Build the Go project and create the .deb package
      goreleaser --skip=publish,validate --clean

      # Define variables
      export BUILD_ARTIFACT="${CI_PROJECT_NAME}_latest_linux_amd64.deb"
      export PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/latest"

      # Save variables to a file
      echo "BUILD_ARTIFACT=${BUILD_ARTIFACT}" > artifacts.env
      echo "PACKAGE_REGISTRY_URL=${PACKAGE_REGISTRY_URL}" >> artifacts.env

      # Upload the .deb file to the GitLab package registry
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/dist/*.deb ${PACKAGE_REGISTRY_URL}/${BUILD_ARTIFACT}
  artifacts:
    paths:
      - 'build/dist/*.deb'
      - 'artifacts.env'
    expire_in: '1 week'
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"

delivery:prod:
  extends: 'delivery:qa'
  variables:
    TAG: "$CI_COMMIT_TAG"
  rules:
    - if: "$CI_COMMIT_TAG"
